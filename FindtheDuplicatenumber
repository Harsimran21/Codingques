class Solution {
public:
    int findDuplicate(vector<int>& nums) {
     
        int slow= 0;
        int fast =0;
        slow= nums[slow];
        fast= nums[nums[fast]];
        
        while(slow!=fast){
            slow=nums[slow];
            fast=nums[nums[fast]];
        }
        int slow2= 0 ;
        
        while(slow!=slow2){
            slow=nums[slow];
        slow2=nums[slow2];
        }
        return slow;}
};

----------------------------second sol------------------
class Solution {
public:
    int findDuplicate(vector<int>& nums) {
     
      vector<int> freq(nums.size()); 
        
        for(int i=0;i<nums.size();i++){
             freq[nums[i]]++;
           
        }
        
        for(int i=0;i<nums.size();i++){
            if(freq[i]>1){
                return i;
            }
        }
    return 0;}
};
